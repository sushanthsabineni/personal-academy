// Supported languages configuration
export const languages = [
  { code: 'en', name: 'English', flag: 'ğŸ‡¬ğŸ‡§' },
  { code: 'es', name: 'EspaÃ±ol', flag: 'ğŸ‡ªğŸ‡¸' },
  { code: 'de', name: 'Deutsch', flag: 'ğŸ‡©ğŸ‡ª' },
  { code: 'pt', name: 'PortuguÃªs', flag: 'ğŸ‡µğŸ‡¹' },
  { code: 'it', name: 'Italiano', flag: 'ğŸ‡®ğŸ‡¹' },
  { code: 'fr', name: 'FranÃ§ais', flag: 'ğŸ‡«ğŸ‡·' },
  { code: 'pl', name: 'Polski', flag: 'ğŸ‡µğŸ‡±' },
  { code: 'zh', name: 'ç®€ä½“ä¸­æ–‡', flag: 'ğŸ‡¨ğŸ‡³' },
] as const

export type LanguageCode = typeof languages[number]['code']

export const defaultLanguage: LanguageCode = 'en'

// Get language from localStorage or default
export function getCurrentLanguage(): LanguageCode {
  if (typeof window === 'undefined') return defaultLanguage
  
  const stored = localStorage.getItem('preferred-language')
  if (stored && languages.some(lang => lang.code === stored)) {
    return stored as LanguageCode
  }
  
  return defaultLanguage
}

// Save language preference
export function setCurrentLanguage(code: LanguageCode) {
  if (typeof window === 'undefined') return
  localStorage.setItem('preferred-language', code)
}

// Get language name by code
export function getLanguageName(code: LanguageCode): string {
  return languages.find(lang => lang.code === code)?.name || 'English'
}

// Get language flag by code
export function getLanguageFlag(code: LanguageCode): string {
  return languages.find(lang => lang.code === code)?.flag || 'ğŸ‡¬ğŸ‡§'
}
